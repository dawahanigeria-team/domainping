name: Deploy Frontend to AWS S3 + CloudFront

on:
  push:
    branches: [main, master, dev]
    paths: ['frontend/**']
  pull_request:
    branches: [main, master, dev]
    paths: ['frontend/**']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build React app
        working-directory: frontend
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL || 'https://domainping-api.fly.dev' }}
          GENERATE_SOURCEMAP: false
        run: npm run build

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        working-directory: frontend
        run: |
          aws s3 sync build/ s3://${{ secrets.AWS_S3_BUCKET }} --delete --exact-timestamps

      - name: Invalidate CloudFront cache
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Output deployment URL
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          echo "üöÄ Frontend deployed successfully!"
          echo "üì± CloudFront URL: https://${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}.cloudfront.net"
          echo "üåê Check your custom domain if configured" 